{
  "functions": [
    {
      "name": "sugoCaller",
      "access": "",
      "virtual": false,
      "description": "Create a caller instance. This is just an alias of `new SugoCaller(config)`",
      "parameters": [
        {
          "name": "config",
          "type": "Object",
          "description": "Sugo caller configuration",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "SugoCaller",
        "description": ""
      }
    },
    {
      "name": "authorize",
      "access": "",
      "virtual": false,
      "description": "Authorize socket",
      "parameters": [],
      "examples": [],
      "returns": {
        "type": "Promise",
        "description": ""
      }
    }
  ],
  "classes": [
    {
      "name": "SugoCaller",
      "description": "",
      "extends": [],
      "access": "",
      "virtual": false,
      "fires": "",
      "constructor": {
        "name": "SugoCaller",
        "description": "Caller to access remote actor",
        "parameters": [
          {
            "name": "config",
            "type": "Object",
            "description": "Caller configuration",
            "default": "",
            "optional": "",
            "nullable": ""
          },
          {
            "name": "config.protocol",
            "type": "string",
            "description": "Protocol to use ( \"http\" or \"https\" )",
            "default": "",
            "optional": true,
            "nullable": ""
          },
          {
            "name": "config.host",
            "type": "string",
            "description": "Hub host name. ( eg: \"localhost:3000\" )",
            "default": "",
            "optional": true,
            "nullable": ""
          },
          {
            "name": "config.pathname",
            "type": "string",
            "description": "Hub URL path name ( eg: \"/callers\" )",
            "default": "",
            "optional": true,
            "nullable": ""
          },
          {
            "name": "config.auth",
            "type": "Object",
            "description": "Auth data for hub",
            "default": "",
            "optional": true,
            "nullable": ""
          }
        ],
        "examples": []
      },
      "functions": [
        {
          "name": "connect",
          "access": "",
          "virtual": false,
          "description": "Connect to actor",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of actor",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<ActorAccessBundle>",
            "description": "- Actor accessor"
          }
        },
        {
          "name": "disconnect",
          "access": "",
          "virtual": false,
          "description": "Disconnect from cloud server",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of actor to connect",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise",
            "description": ""
          }
        }
      ]
    },
    {
      "name": "ActorAccess",
      "description": "",
      "extends": [],
      "access": "",
      "virtual": false,
      "fires": "",
      "constructor": {
        "name": "ActorAccess",
        "description": "Access for actors.",
        "parameters": [],
        "examples": []
      },
      "functions": [
        {
          "name": "registerSpecs",
          "access": "",
          "virtual": false,
          "description": "Register module specs.",
          "parameters": [
            {
              "name": "specs",
              "type": "Object",
              "description": "Spec data of actor",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "connector",
              "type": "Object",
              "description": "Connector functions",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": []
        },
        {
          "name": "deregisterSpecs",
          "access": "",
          "virtual": false,
          "description": "De-register module specs.",
          "parameters": [
            {
              "name": "moduleNames",
              "type": "string",
              "description": "Spec data of actor",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": []
        }
      ]
    },
    {
      "name": "ActorAccessBundle",
      "description": "",
      "extends": [],
      "access": "",
      "virtual": false,
      "fires": "",
      "constructor": {
        "name": "ActorAccessBundle",
        "description": "Bundle for actor access.",
        "parameters": [],
        "examples": []
      },
      "functions": [
        {
          "name": "get",
          "access": "",
          "virtual": false,
          "description": "Get a module",
          "parameters": [
            {
              "name": "moduleName",
              "type": "string",
              "description": "Name of module",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Module",
            "description": "- Found module"
          }
        },
        {
          "name": "has",
          "access": "",
          "virtual": false,
          "description": "Check if module exists",
          "parameters": [
            {
              "name": "moduleName",
              "type": "string",
              "description": "Name of module",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "- Has the module or not"
          }
        },
        {
          "name": "describe",
          "access": "",
          "virtual": false,
          "description": "Describe a module",
          "parameters": [
            {
              "name": "moduleName",
              "type": "string",
              "description": "Name of module",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Object",
            "description": "- Module description"
          }
        },
        {
          "name": "set",
          "access": "",
          "virtual": false,
          "description": "Set a module",
          "parameters": [
            {
              "name": "moduleName",
              "type": "string",
              "description": "Name of module",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "module",
              "type": "Object",
              "description": "Module to set",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": []
        },
        {
          "name": "del",
          "access": "",
          "virtual": false,
          "description": "Delete module",
          "parameters": [
            {
              "name": "moduleName",
              "type": "string",
              "description": "Name of module",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": []
        },
        {
          "name": "names",
          "access": "",
          "virtual": false,
          "description": "Get names of modules",
          "parameters": [],
          "examples": [],
          "returns": {
            "type": "Array.<string>",
            "description": ""
          }
        }
      ]
    }
  ]
}